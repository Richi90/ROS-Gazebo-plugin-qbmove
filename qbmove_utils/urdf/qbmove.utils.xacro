<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find qb_move_description)/urdf/qbmove.materials.xacro"/>

  <xacro:macro name="build_geometry" params="path:=^|'qb_move' mesh_name mesh_scale:=^|.001">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
      <mesh filename="package://${path}_description/meshes/${mesh_name}.stl" scale="${mesh_scale} ${mesh_scale} ${mesh_scale}"/>
    </geometry>
  </xacro:macro>

  <xacro:macro name="build_joint" params="name *origin parent:=^ axis:=^ *dynamics *limits">
    <joint name="${name}_joint" type="revolute">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}_link"/>
      <child link="${name}_link"/>
      <axis xyz="${axis}"/>
      <xacro:insert_block name="dynamics"/>
      <xacro:insert_block name="limits"/>
    </joint>

  </xacro:macro>

  <xacro:macro name="build_link" params="name **inertia material:=^|'default' mesh:=^|'' mesh_collision:=^|''">
    <link name="${name}_link">
      <inertial>
        <xacro:insert_block name="inertia"/>
      </inertial>
      <xacro:if value="${mesh != ''}">
        <visual>
          <xacro:qbmove.build_geometry mesh_name="${mesh}"/>
          <material name="qbmove/${material}"/>
        </visual>
      </xacro:if>
      <xacro:if value="${mesh_collision != ''}">
        <collision>
          <xacro:qbmove.build_geometry mesh_name="${mesh_collision}"/>
        </collision>
      </xacro:if>
    </link>
  </xacro:macro>

  <xacro:macro name="build_motor" params="name:=^ *origin parent:=^ axis:=^ *dynamics *limits mesh:=^ mesh_collision:=^ material:=^ *inertia">
    <xacro:qbmove.build_joint name="${name}">
      <xacro:insert_block name="origin"/>
      <xacro:insert_block name="dynamics"/>
      <xacro:insert_block name="limits"/>
    </xacro:qbmove.build_joint>
    <xacro:qbmove.build_link name="${name}">
      <xacro:insert_block name="inertia"/>
    </xacro:qbmove.build_link>
  </xacro:macro>

  <xacro:macro name="build_motor_from_yaml" params="yaml_file:=^ configuration:=^ name namespace:=^ type parent">
    <xacro:qbmove.build_motor name="${namespace}_${name}" axis="${yaml_file[configuration][name]['axis']}" material="${type}" mesh="${yaml_file[configuration][name]['mesh']}" mesh_collision="${yaml_file[configuration][name]['mesh_collision']}">
      <origin xyz="${yaml_file[configuration][name]['position']}"
              rpy="${yaml_file[configuration][name]['orientation']}"/>
      <dynamics damping="${yaml_file[configuration][name]['dynamics']['damping']}"
                friction="${yaml_file[configuration][name]['dynamics']['friction']}"/>
      <limit lower="${yaml_file[configuration][name]['limits']['lower']}"
             upper="${yaml_file[configuration][name]['limits']['upper']}"
             effort="${yaml_file[configuration][name]['limits']['effort']}"
             velocity="${yaml_file[configuration][name]['limits']['velocity']}"/>
      <inertial_group>
        <mass value="${yaml_file[configuration][name]['inertial']['mass']}"/>
        <origin xyz="${yaml_file[configuration][name]['inertial']['origin']}"/>
        <inertia ixx="${yaml_file[configuration][name]['inertial']['inertia']['ixx']}"
                 ixy="${yaml_file[configuration][name]['inertial']['inertia']['ixy']}"
                 ixz="${yaml_file[configuration][name]['inertial']['inertia']['ixz']}"
                 iyy="${yaml_file[configuration][name]['inertial']['inertia']['iyy']}"
                 iyz="${yaml_file[configuration][name]['inertial']['inertia']['iyz']}"
                 izz="${yaml_file[configuration][name]['inertial']['inertia']['izz']}"/>
      </inertial_group>
    </xacro:qbmove.build_motor>

    <!-- INSERTED BY RICCARDO MENGACCI (2020) -->
        <!-- The following code can be used with the custom qbmove advanced plugins -->
        <!-- On shaft -->
        <xacro:if value="${type == 'shaft'}">
          <gazebo>
              <plugin name="advanced_vsa" filename="libadvanced_plugin.so">
                  <joint>${namespace}_${name}_joint</joint>  
              </plugin>
          </gazebo>
        </xacro:if>
    <!-- END INSERTION BY RICCARDO MENGACCI -->
  </xacro:macro>

  <xacro:macro name="build_fixed_structure" params="name:=^ *origin parent:=^ *inertia material:=^ mesh:=^ mesh_collision:=^">
    <joint name="${name}_fixed_joint" type="fixed">
      <xacro:insert_block name="origin"/>
      <parent link="${parent}_link"/>
      <child link="${name}_link"/>
    </joint>
    <xacro:qbmove.build_link name="${name}" material="${material}" mesh="${mesh}" mesh_collision="${mesh_collision}">
      <xacro:insert_block name="inertia"/>
    </xacro:qbmove.build_link>
  </xacro:macro>

  <xacro:macro name="build_fixed_structure_from_yaml" params="yaml_file:=^ configuration:=^ name namespace:=^ type parent">
    <xacro:qbmove.build_displaced_fixed_structure_from_yaml name="${name}" type="${type}" parent="${parent}">
      <origin xyz="${yaml_file[configuration][name]['position']}"
              rpy="${yaml_file[configuration][name]['orientation']}"/>
    </xacro:qbmove.build_displaced_fixed_structure_from_yaml>
  </xacro:macro>

  <xacro:macro name="build_displaced_fixed_structure_from_yaml" params="yaml_file:=^ configuration:=^ name namespace:=^ type parent *origin">
    <xacro:qbmove.build_fixed_structure name="${namespace}_${name}" material="${type}" mesh="${yaml_file[configuration][name]['mesh']}" mesh_collision="${yaml_file[configuration][name]['mesh_collision']}">
      <xacro:insert_block name="origin"/>
      <inertial_group>
        <mass value="${yaml_file[configuration][name]['inertial']['mass']}"/>
        <origin xyz="${yaml_file[configuration][name]['inertial']['origin']}"/>
        <inertia ixx="${yaml_file[configuration][name]['inertial']['inertia']['ixx']}"
                 ixy="${yaml_file[configuration][name]['inertial']['inertia']['ixy']}"
                 ixz="${yaml_file[configuration][name]['inertial']['inertia']['ixz']}"
                 iyy="${yaml_file[configuration][name]['inertial']['inertia']['iyy']}"
                 iyz="${yaml_file[configuration][name]['inertial']['inertia']['iyz']}"
                 izz="${yaml_file[configuration][name]['inertial']['inertia']['izz']}"/>
      </inertial_group>
    </xacro:qbmove.build_fixed_structure>
  </xacro:macro>

  <xacro:macro name="build_virtual_mechanism" params="name:=^ parent:=^ *dynamics *limits">
    <joint name="${name}_virtual_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${parent}_link"/>
      <child link="${name}_virtual_link"/>
      <axis xyz="0 0 1"/>
      <xacro:insert_block name="dynamics"/>
      <xacro:insert_block name="limits"/>
    </joint>
    <link name="${name}_virtual_link"/>
  </xacro:macro>

  <xacro:macro name="build_virtual_mechanism_from_yaml" params="name namespace:=^ parent">
    <xacro:qbmove.build_virtual_mechanism name="${namespace}_${name}">
      <dynamics damping="${yaml_file[configuration][name]['dynamics']['damping']}"
                friction="${yaml_file[configuration][name]['dynamics']['friction']}"/>
      <limit lower="${yaml_file[configuration][name]['limits']['lower']}"
             upper="${yaml_file[configuration][name]['limits']['upper']}"
             effort="${yaml_file[configuration][name]['limits']['effort']}"
             velocity="${yaml_file[configuration][name]['limits']['velocity']}"/>
    </xacro:qbmove.build_virtual_mechanism>
  </xacro:macro>

  <xacro:macro name="build_flange_from_yaml" params="path:='qb_move' filename:='default' configuration:='flanges' flange namespace parent type:='flange'">
    <xacro:property name="yaml_filename" value="$(find ${path}_description)/config/${filename}.yaml"/>
    <xacro:property name="yaml_file" value="${load_yaml(yaml_filename)}"/>

    <xacro:qbmove.build_fixed_structure_from_yaml name="${flange}" type="${type}" parent="${parent}"/>
  </xacro:macro>

  <xacro:macro name="build_displaced_flange_from_yaml" params="path:='qb_move' filename:='default' configuration:='flanges' flange namespace parent *origin type:='flange'">
    <xacro:property name="yaml_filename" value="$(find ${path}_description)/config/${filename}.yaml"/>
    <xacro:property name="yaml_file" value="${load_yaml(yaml_filename)}"/>

    <xacro:qbmove.build_displaced_fixed_structure_from_yaml name="${flange}" type="${type}" parent="${parent}">
      <xacro:insert_block name="origin"/>
    </xacro:qbmove.build_displaced_fixed_structure_from_yaml>
  </xacro:macro>

  <xacro:macro name="build_move_from_yaml" params="filename:='default' configuration:='qbmove' namespace parent *origin">
    <xacro:property name="yaml_filename" value="$(find qb_move_description)/config/${filename}.yaml"/>
    <xacro:property name="yaml_file" value="${load_yaml(yaml_filename)}"/>

    <xacro:qbmove.build_displaced_fixed_structure_from_yaml name="cube" type="cube" parent="${parent}">
      <xacro:insert_block name="origin"/>
    </xacro:qbmove.build_displaced_fixed_structure_from_yaml>
    <xacro:qbmove.build_motor_from_yaml name="motor_1" type="motor" parent="${namespace}_cube"/>
    <xacro:qbmove.build_motor_from_yaml name="motor_2" type="motor" parent="${namespace}_cube"/>
    <xacro:qbmove.build_motor_from_yaml name="shaft" type="shaft" parent="${namespace}_cube"/>
    <xacro:qbmove.build_virtual_mechanism_from_yaml name="stiffness_preset" parent="${namespace}_cube"/>
  </xacro:macro>

  <!-- INSERTED BY RICCARDO MENGACCI -->
  <xacro:macro name="build_motors_from_yaml" params="filename:='default' configuration:='qbmove' namespace parent *origin">
    <xacro:property name="yaml_filename" value="$(find qb_move_description)/config/${filename}.yaml"/>
    <xacro:property name="yaml_file" value="${load_yaml(yaml_filename)}"/>

    <xacro:qbmove.build_motor_from_yaml name="motor_1" type="motor" parent="${parent}"/>
    <xacro:qbmove.build_motor_from_yaml name="motor_2" type="motor" parent="${parent}"/>
    <xacro:qbmove.build_virtual_mechanism_from_yaml name="stiffness_preset" parent="${parent}"/>
  </xacro:macro>

</robot>